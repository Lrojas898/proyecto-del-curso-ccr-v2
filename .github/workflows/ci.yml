# GitHub Actions Pipeline para SonarQube + Trivy
# Pipeline completo con análisis de seguridad y calidad de código

name: CI/CD Pipeline with Security Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better SonarQube analysis

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run Tests and Generate Coverage
      run: |
        cd ccrHospitalManagement
        mvn clean compile test jacoco:report

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: ccrHospitalManagement/target/surefire-reports/

    - name: Upload Coverage Reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: ccrHospitalManagement/target/site/jacoco/

  security-scan:
    name: Security Analysis with Trivy
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Run Trivy Security Scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: 'ccrHospitalManagement/'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Run Trivy Secret Scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: 'ccrHospitalManagement/'
        scanners: 'secret'
        format: 'json'
        output: 'trivy-secrets.json'

    - name: Upload Trivy Results
      uses: actions/upload-artifact@v4
      with:
        name: trivy-results
        path: |
          trivy-results.sarif
          trivy-secrets.json

    - name: Upload SARIF to GitHub Security
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: trivy-results.sarif

  sonarqube-analysis:
    name: SonarQube Code Analysis
    runs-on: ubuntu-latest
    needs: security-scan

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for SonarQube analysis

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Generate Test Coverage
      run: |
        cd ccrHospitalManagement
        mvn clean compile test jacoco:report

    - name: SonarQube Analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: http://68.211.121.135:9000
      run: |
        cd ccrHospitalManagement
        mvn sonar:sonar \
          -Dsonar.projectKey=ccrHospitalManagement \
          -Dsonar.projectName=ccrHospitalManagement \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.token=$SONAR_TOKEN \
          -Dsonar.sources=src/main \
          -Dsonar.tests=src/test \
          -Dsonar.java.binaries=target/classes \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

  package:
    name: Package Application
    runs-on: ubuntu-latest
    needs: sonarqube-analysis

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build WAR Package
      run: |
        cd ccrHospitalManagement
        mvn package -DskipTests=true

    - name: Upload WAR Artifact
      uses: actions/upload-artifact@v4
      with:
        name: webapp-war
        path: ccrHospitalManagement/target/*.war