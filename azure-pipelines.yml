# Azure DevOps Pipeline para SonarQube + Trivy
# Pipeline completo con análisis de seguridad y calidad de código

trigger:
- main

variables:
  # Variables del proyecto
  projectName: 'ccrHospitalManagement'
  sonarQubeEndpoint: 'SonarQube-Server' # Service connection name
  trivyVersion: '0.47.0'

pool:
  name: 'Default'

stages:
- stage: Build
  displayName: 'Build and Test'
  jobs:
  - job: BuildJob
    displayName: 'Maven Build'
    steps:
    - task: JavaToolInstaller@0
      displayName: 'Install Java 17'
      inputs:
        versionSpec: '17'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'

    - task: Maven@3
      displayName: 'Maven Clean Compile Test'
      inputs:
        mavenPomFile: 'ccrHospitalManagement/pom.xml'
        goals: 'clean compile test'
        options: '-DskipTests=false'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'

    - task: Maven@3
      displayName: 'Generate JaCoCo Report'
      inputs:
        mavenPomFile: 'ccrHospitalManagement/pom.xml'
        goals: 'jacoco:report'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'

    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/surefire-reports/*.xml'
        failTaskOnFailedTests: true

    - task: PublishCodeCoverageResults@1
      displayName: 'Publish Code Coverage'
      inputs:
        codeCoverageTool: 'JaCoCo'
        summaryFileLocation: '**/site/jacoco/jacoco.xml'
        reportDirectory: '**/site/jacoco'

- stage: SecurityScan
  displayName: 'Security Analysis'
  dependsOn: Build
  jobs:
  - job: TrivyScan
    displayName: 'Trivy Security Scan'
    steps:
    - script: |
        # Install Trivy
        sudo apt-get update
        sudo apt-get install wget apt-transport-https gnupg lsb-release -y
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy -y
      displayName: 'Install Trivy'

    - script: |
        # Scan filesystem for vulnerabilities
        trivy fs --format sarif --output trivy-results.sarif ccrHospitalManagement/

        # Scan for secrets
        trivy fs --scanners secret --format json --output trivy-secrets.json ccrHospitalManagement/

        # Scan dependencies (if any container images)
        trivy fs --format table ccrHospitalManagement/
      displayName: 'Run Trivy Security Scan'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Trivy Results'
      inputs:
        pathToPublish: 'trivy-results.sarif'
        artifactName: 'TrivyResults'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Trivy Secrets Scan'
      inputs:
        pathToPublish: 'trivy-secrets.json'
        artifactName: 'TrivySecrets'

- stage: SonarQubeAnalysis
  displayName: 'SonarQube Analysis'
  dependsOn: SecurityScan
  jobs:
  - job: SonarScan
    displayName: 'SonarQube Code Analysis'
    steps:
    - task: JavaToolInstaller@0
      displayName: 'Install Java 17'
      inputs:
        versionSpec: '17'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'

    - task: SonarQubePrepare@5
      displayName: 'Prepare SonarQube Analysis'
      inputs:
        SonarQube: '$(sonarQubeEndpoint)'
        scannerMode: 'Other'
        extraProperties: |
          sonar.projectKey=$(projectName)
          sonar.projectName=$(projectName)
          sonar.sources=ccrHospitalManagement/src/main
          sonar.tests=ccrHospitalManagement/src/test
          sonar.java.binaries=ccrHospitalManagement/target/classes
          sonar.coverage.jacoco.xmlReportPaths=ccrHospitalManagement/target/site/jacoco/jacoco.xml

    - task: Maven@3
      displayName: 'Run SonarQube Analysis'
      inputs:
        mavenPomFile: 'ccrHospitalManagement/pom.xml'
        goals: 'clean verify sonar:sonar'
        options: '-Dsonar.projectKey=$(projectName)'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'

    - task: SonarQubePublish@5
      displayName: 'Publish SonarQube Results'
      inputs:
        pollingTimeoutSec: '300'

- stage: Deploy
  displayName: 'Package Application'
  dependsOn: SonarQubeAnalysis
  jobs:
  - job: Package
    displayName: 'Create Deployment Package'
    steps:
    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'ccrHospitalManagement/pom.xml'
        goals: 'package'
        options: '-DskipTests=true'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish WAR Artifact'
      inputs:
        pathToPublish: 'ccrHospitalManagement/target/*.war'
        artifactName: 'WebApp'